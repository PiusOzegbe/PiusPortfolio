---
import { Icon } from "astro-icon/components";
import type { MarkdownHeading } from "astro";

type Props = {
  headings: MarkdownHeading[];
  asSidebar?: boolean;
};

const { headings, asSidebar = false } = Astro.props;
---

<style>
  [data-icon] {
    display: inline-block;
  }

  .table-of-contents-container {
    background-color: var(--background-color);
    border: 2px solid var(--foreground-color);

    @media (min-width: 1536px) {
      position: -webkit-sticky;
      position: sticky;
      top: 0;
    }

    @apply 2xl:w-80 2xl:overflow-hidden p-1 pb-0 my-4 2xl:my-0 rounded-xl;

    & .header {
      @apply flex justify-between items-center bg-secondary-dark dark:bg-secondary-light text-secondary-light dark:text-secondary-dark px-4 py-2 mb-1 rounded-md;

      & h3 {
        @apply text-lg 2xl:text-base cursor-pointer;
      }
    }

    & .contents-list {
      @apply h-80 2xl:h-96 overflow-y-auto;

      &::-webkit-scrollbar {
        display: none;
      }

      & ul {
        @apply list-none space-y-1.5 pt-2 pb-4;

        & li {
          @apply px-3;
        }
      }
    }
  }
</style>

<Fragment>
  {
    headings.length > 0 ? (
      <div class="table-of-contents-container" class:list={{ "hidden 2xl:block": asSidebar, "2xl:hidden": !asSidebar }} x-data="{ showContent: true }">
        <div class="header">
          <h3>Table of contents</h3>
          <button @click="showContent = !showContent" class="text-xl -mt-1" aria-label="Toggle table of contents">
            <template x-if="!showContent">
              <Icon name="octicon:chevron-down-16" />
            </template>

            <template x-if="showContent">
              <Icon name="octicon:chevron-up-16" />
            </template>
          </button>
        </div>

        <div class="contents-list" x-show="showContent">
          <ul>
            {headings.map((heading) => (
              <li style={`margin-left: ${(heading.depth - 1) * 1.25}rem`}>
                <a href={`#${heading.slug}`}>{heading.text}</a>
              </li>
            ))}
          </ul>
        </div>
      </div>
    ) : null
  }
</Fragment>
